TERMINOLOGIES
Web Browsers are software or applications used to access websites.
websites are hosted on webservers
Websites are accessed on mirriad of devices

HTML/html
html stand for HyperText Markup Language. It is the most basic building block of the Web that defines the meaning and structure of web
content.
html pages are text documents.
html uses tags (characters that sit inside angled brackets) to give the information they surround special meaning.
Tags usually come in pairs. The opening tag denotes the start of a piece of content; the closing tag denotes the end.
Opening tags can carry attributes, which tell us more about the content of that element.
Attributes require a name and a value.
Therefore, to learn html one need to know what tags are available for use, what they do, and where they can go.


TAGS, STRUCTURE AND TEXT
TAGS
 < > is an opening tag.
 </ > is a closing tag.
 
 STRUCTURE
 <html> is an html opening tag.
 </html> is an html closing tag.
 <body> is a body opening tag.
 </body> is a body closing tag.
 Everything inside the body element is shown inside the main browser window.
 
 <head> is a head opening tag.
 <head> is a head closing tag.
 Before the body element one will often see a head element which contains information about the page (rather than information that is
 shown within the main part of the browser window.
 
 <title> is a title opening tag.
 <title> is a title closing tag.
 The contents of the title element are either shown in the top of the browser, above where we usually type in the URL of the page we
 want to visit, or on the tab.
 
 <section> is a section opening tag.
 </section> is a section closing tag.
 The section tag defines the section of documents such as chapters, headers, footers or any other sections.
 
 TEXTS
 Headings
 <h1> is a first level heading opening tag.
 </h1> is  first level heading closing tag.
 <h2> is a second level heading opening tag.
 </h2> is  second level heading closing tag.
 <h3> is a thid level heading opening tag.
 </h3> is  third level heading closing tag
 <h4> is a fourth level heading opening tag.
 </h4> is a fourth level heading closing tag.
 <h5> is a fifth level heading opening tag.
 </h5> is  fifth level heading closing tag.
 <h6> is a sixth or final level heading opening tag.
 </h6> is  sixth or final level heading closing tag.
 Browsers display the contents of headings at different sizes. The contents of an <h1> element is the largest, and the contents of an
 <h6> element is the smallest.
 
 Paragraph
 <P> is a paragraph opening tag.
 </p> is a paragraph closing tag.
 The paragraph tag defines a paragraph. To create a paragraph, one has to surround the words that make up the paragraph with an opening
 <p> tag and closing </p> tag.
 By default, a browser will show each paragraph on a new line with some space between it and any subsequent paragraphs.

 Bold and Italics
 <b> is an opening tag to make characters bold.
 </b> is a closig tag to make characters bold.
 By enclosing words in the tags <b> and </b> we can make characters appear bold.
 The <b></b> tag also represents a section of text that would be presented in a visually different way (for example key words in a 
 paragraph) although the use of the <b> element does not imply any additional meaning.
 
 <i> is an opening tag to make characters italic.
 </i> is a closig tag to make characters italic.
 By enclosing words in the tags <i> and </i> we can make characters appear italic.
 The <i> element also represents a section of text that would be said in a different way from surrounding content — such as technical 
 terms, names of ships, foreign words, thoughts, or other terms that would usually be italicized.
 
 superscript and subscript
 <sup> is an opening tag for superscripting characters.
 </sup> is a closing tag for superscripting characters.
 
 <sub> is an opening tag for subscripting characters.
 <sub> is a closing tag for subscripting characters.
 
 White Space
 In order to make code easier to read, web page authors often add extra spaces or start some elements on new lines.
 When the browser comes across two or more spaces next to each other, it only displays one space. Similarly if it comes across a line 
 break, it treats that as a single space too. This is known as white space collapsing.
 
 Line Break and Horizontal Rules
 <br /> is a line break tag.
 <hr /> is a tag to add horizontal rule between sections.
 There are a few elements that do not have any words between an opening and closing tag. They are known as empty elements and they are 
 written differently.
 An empty element usually has only one tag. Before the closing angled bracket of an be a space and a forward slash character.
 
 Visual editors and their Code View
 Visual editors often resemble word processors. Although each editor will differ slightly, there are some features that are common to 
 most editors that allow you to control the presentation of text.
 If you copy and paste text from a program that allows you to format text (such as Word) into a visual editor, it may add extra markup. To prevent this copy the text into a plain text editor first and then copy it from that program and
 paste it into the visual editor.
 Code views show you the code created by the visual editor so you can manually edit it, or so you can just enter new code yourself. It 
 is often activated using a button with an icon that says HTML or has angled brackets. White space may be added to the code by the editor to make the code easier to read
 In Visual Editors, Headings are created by highlighting text then using a drop-down box to select a heading; Bold and italic text are created by highlighting some text and pressing a b or i button; New paragraphs are created using the return or the enter key; Line breaks are created by pressing the shift key and the return key at the same time; and Horizontal rules are created using a button with a straight line on it.
 
 Semantic Markup
 Semantic markup  help when adding text to web pages.
 Browsers often display the contents of these elements in a different way.
 The reason for using these elements is that other programs, such as screen readers or search engines, can use this extra information.
 <strong> is an opening semantic markup tag  used to indicates that its content has strong importance. 
 </strong> is a closing semantic markup tag  used to indicates that its content has strong importance. 
 By default, browsers will show the contents of a strong element in bold.
 
 <em> is an opening semantic markup tag  used to indicate emphasis.
 </em> is a closing semantic markup tag  used to indicate emphasis.
 Emphasis semantic markup subtly changes the meaning of a sentence.
 By default browsers will show the contents of an <em> element in italic.
 
 Quotations
 There are two elements commonly used for marking up quotations; <blockquote> and <q>.
 The <blockquote> element is used for longer quotes that take up an entire paragraph. Browsers tend to indent the contents of the 
 <blockquote> element, however you should not use this element just to indent a piece of text — rather you should achieve this effect using CSS.
 The <q> element is used for shorter quotes that sit within a paragraph. Browsers are supposed to put quotes around the <q> element, however Internet Explorer does not — therefore many people avoid using the <q> element.
 Both <blockquote> and <q> elements may use the cite attribute to indicate where the quote is from. Its value should be a URL that will have more information about the source of the quotation.
 
 abbreviations and acronyms
 <abbr> is an opening sentantic markup used to abbreviate words or characters
 <abbr> is a closing sentantic markup used to abbreviate words or characters
 A title attribute on the opening tag is used to specify the full term.
 Note that, in HTML 4 there was a separate <acronym> element for acronyms. To spell out the full form of the acronym, the title 
 attribute was used (as with the <abbr> element above). HTML5 just uses the <abbr> element for both abbreviations and acronyms.
 
 Citations and Definitions
 <cite> is an opening semantic markup used when citing work such as a book, film or research paper.
 </cite> is a closing semantic markup used when citing work such as a book, film or research paper.
 The <cite> element can be used to indicate where the citation is from. Note, in HTML5, <cite> should not really be used for a person's
 name — but it was allowed in HTML 4, so most people are likely to continue to use it. Browsers will render the content of a <cite> 
 element in italics.
 <dfn> is an opening semantic markup used when defining a term, concept, or statement.
 </dfn> is a closing semantic markup used when defining a term, concept, or statement.
 <dfn></dfn> is used the first time you explain some new terminology (perhaps an academic concept or some jargon) in a document, it is 
 known as the defining instance of it.
 The <dfn> element is used to indicate the defining instance of a new term.
 Note, some browsers show the content of the <dfn> element in italics. Safari and Chrome do not change its appearance.
 
 Authors Details
 <address> <cite> is an opening semantic markup used when proving the address.
 <address> <cite> is a closing semantic markup used when proving the address.
 The <address> element has quite a specific use: to contain contact details for the author of the page.
 It can contain a physical address, but it does not have to. It may also contain a phone number or email address.
 Browsers often display the content of the <address> element in italics.
 
 Changes to Content
 <ins> is an opening semantic markup used when inserting changes to contents. 
 </ins> is a closing semantic markup used when inserting changes to contents.
 <ins></ins> cab mostly be used when proofrading and edditing.
 <del> is an opening semantic markup element used show text that has been deleted from it.
 <del> is a closing semantic markup element used show text that has been deleted from it.
 The content of a <ins> element is usually underlined, while the content of a <del> element usually has a line through it.
 However, to indicates something that is no longer accurate or relevant (but that should not be deleted), <s></s> tags are used.
 Visually the content of an <s> element will usually be displayed with a line through the center.
 Older versions of HTML had a <u> element for content that was underlined, but this is being phased out.
 
 LIST
 There are three types of HTML lists: ordered, unordered, and definition.
 Ordered lists use numbers, Unordered lists use bullets, definition lists are used to define terminology.
 Lists can be nested inside one another.
 
 Ordered List
 
 The ordered list is created with the <ol> element.
 Each item in the list is placed between an opening <li> tag and a closing </li> tag.
 Browsers indent lists by default.
 Sometimes you may see a type attribute used with the <ol> element to specify the type of numbering (numbers, letters, roman numerals
 and so on). In such instances, it is better to use the CSS liststyle-type property.
 
 Unordered-Lists
 Unordered list is created with the <ul> element. Just like with ordered list, each item in the list is placed between an opening <li> 
 tag and a closing </li> tag.
 Browsers indent lists by default. Sometimes you may see a type attribute used with the <ul> element to specify the type of bullet
 point (circles, squares, diamonds and so on). Here too, it is better to use the CSS list-styletype property 
 
 Definition Lists
 Definition list is created with the <dl> element and usually consists of a series of terms and their definitions.
 Inside the <dl> element one will usually see pairs of <dt> and <dd> elements. <dt> is used to contain the term being defined while 
 <dd> is used to contain the definition.
 Sometimes you might see a list where there are two terms used for the same definition or two different definitions for the same term.
 
 Nested Lists
 One can put a second list inside an <li> element to create a sublist or nested list.
 Browsers display nested lists indented further than the parent list. In nested unordered lists, the browser will usually change the 
 style of the bullet point too.
 
 LINKS
 Links are the defining feature of the web because they allow you to move from one web page to another — enabling the very idea of browsing or surfing.
 Links can be from one website to another, from one page to another on the same website and from one part of a web page to another part of the same page.
 There also links that open in a new browser window and links that start up your email program and address a new email to someone.
 Links are created using the <a> element. Users can click on anything between the opening <a> tag and the closing </a> tag. You specify
 which page you want to link to using the href attribute.
 The text between the opening <a> tag and closing </a> tag is known as link text. Where possible, your link text should explain where visitors will be taken 
 if they click on it (rather than just saying "click here").
 Many people navigate websites by scanning the text for links. Clear link text can help visitors find what they want. This will give them a more positive 
 impression of your site and may encourage them to visit it for longer. It also helps people using screen reader software.
 To write good link text, you can think of words people might use when searching for the page that you are linking to. (For example, rather than write
"places to stay" you could use something more specific such as "hotels in New York.")
 
 Linking to other-Sites
 Links are created using the <a> element which has an attribute called href. The value of the href attribute is the page that you want people to go to when
 they click on the link.
 Users can click on anything that appears between the opening <a> tag and the closing </a> tag and will be taken to the page specified in the href attribute.
 When you link to a different website, the value of the href attribute will be the full web address for the site, which is known as an absolute URL.
 An absolute URL starts with the domain name for that site, and can be followed by the path to a specific page. If no page is specified, the site will display the homepage
 URL stands for Uniform Resource Locator and every web page has its own URL. This is the web address that you would type into a browser if you wanted to
 visit that specific page.
 Browsers show links in blue with an underline by default.
 
 Linking to other Pages
 When one is linking to other pages within the same site, you do not need to specify the domain name in the URL. You can use a shorthand known as a relative URL.
 If all the pages of the site are in the same folder, then the value of the href attribute is just the name of the file.
 If you have different pages of a site in different folders, then you can use a slightly more complex syntax to indicate where the page is in relation to the current page.
 If you look at the download code for each chapter, you will see that the index.html file contains links that use relative URLs.
 Relative URL are used when linking to other pages within the same site. These are like a shorthand version of absolute URLs because you do not need to specify the domain name.
 Relative URLs help when building a site on your computer because you can create links between pages without having to set up your domain name or hosting.
 
 Directory Strucrure
 On larger websites it's a good idea to organize your code by placing the pages for each different section of the site into a new folder. Folders on a website 
 are sometimes referred to as directories.
 The top-level folder is known as the root folder and contains all of the other files and folders for a website.
 Each section of the site is placed in a separate folder; this helps organize the files.
 The relationship between files and folders on a website is described using the same terminology as a family tree. 
 The main homepage of a site written in HTML (and the homepages of each section in a child folder) is called index.html.
 Web servers are usually set up to return the index.html file if no file name is specified.
 
 Relative Link Type
 To link to a file in the same folder, just use the file name.
 For a child folder, use the name of the child folder, followed by a forward slash, then the file name.
 Use the name of the child folder, followed by a forward slash, then the name of the grandchild folder, followed by another forward slash, then the file name.
 To link to a parent folder you should use ../ to indicate the folder above the current one, then follow it with the file name.
 To link to a grandparent folder, one can repeat the ../ to indicate that you want to go up two folders (rather than one), then follow it with the
file name.
 
 